digraph {


    rankdir=LR;
    //size="30,30";
    ratio = fill;

    "START\n(master)"
    "Query Node\n(nuc-01)" 
    "Query Node\n(nuc-02)" 
    "Linux Tests\n(nuc-01-pluto)"
    "Linux Tests\n(nuc-01-zed-fmcomms2)"
    "Linux Tests\n(nuc-02-zc706-daq2)"

    "START\n(master)" -> "Update Agents\n(nuc-01)"
    "START\n(master)" -> "Update Agents\n(nuc-02)"

    "Update Agents\n(nuc-01)" -> "Query Node\n(nuc-01)"
    "Update Agents\n(nuc-02)" -> "Query Node\n(nuc-02)"

    "Query Node\n(nuc-01)" -> "Check Required\nHardware\n(master)"
    "Query Node\n(nuc-02)" -> "Check Required\nHardware\n(master)"
 
    "Check Required\nHardware\n(master)" -> "Setup Docker\n(nuc-01-pluto)"
    "Check Required\nHardware\n(master)" -> "Setup Docker\n(nuc-01-zed-fmcomms2)"
    "Check Required\nHardware\n(master)" -> "Setup Docker\n(nuc-02-zc706-daq2)"

    "Setup Docker\n(nuc-01-pluto)" -> "Linux Tests\n(nuc-01-pluto)"
    "Setup Docker\n(nuc-01-zed-fmcomms2)" -> "Linux Tests\n(nuc-01-zed-fmcomms2)"
    "Setup Docker\n(nuc-02-zc706-daq2)" -> "Linux Tests\n(nuc-02-zc706-daq2)"

    "Linux Tests\n(nuc-01-pluto)" -> "Collect Logs\n"
    "Linux Tests\n(nuc-01-zed-fmcomms2)" -> "Collect Logs\n"
    "Linux Tests\n(nuc-02-zc706-daq2)" -> "Collect Logs\n"

}
